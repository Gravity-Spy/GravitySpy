language: python
os: linux

env:
  global:
    - PIP_FLAGS="--quiet"
    - KERAS_BACKEND="tensorflow"
    - MPLBACKEND='agg'

python:
  - '3.5'
  - '3.6'
  - '3.7'

before_install:
  # install miniconda
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
        curl -o miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh;
    else
        curl -o miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh;
    fi
  - bash miniconda.sh -b -p ${HOME}/miniconda
  - source "${HOME}/miniconda/etc/profile.d/conda.sh"
  - conda config --set always_yes yes --set changeps1 no
  - conda config --add channels conda-forge
  - conda config --add channels anaconda
  - travis_retry conda update --quiet --yes conda
  - conda info --all

install:
  # install runtime dependencies into conda environment
  - travis_retry conda create --quiet --name ci python=${TRAVIS_PYTHON_VERSION} pip setuptools
  - travis_retry conda install --quiet --yes --name ci
        "configparser"
        "dqsegdb >= 1.5.0"
        "gwpy >= 1.0.0"
        "gwtrigfind >= 0.7"
        "h5py >= 1.3"
        "Keras >= 2.3.1"
        "lscsoft-glue >= 1.59.3"
        "mysqlclient >= 1.4.0"
        "pandas >= 0.22"
        "psycopg2 >= 2.7.5"
        "python-ligo-lw >= 1.6.0"
        "scikit-image >= 0.14.0"
        "scikit-learn >= 0.20.0"
        "scipy >= 1.0.0"
        "sqlalchemy >= 1.2.12"
        "pytables > 3.0.0"
        "tensorflow-gpu >= 2.0.0"

  - conda activate ci
  # install this package
  - python -m pip install --editable .

before_script:
  # install testing requirements
  - travis_retry conda install --quiet --yes --name ci --file requirements-dev.txt

script:
  - python -m pytest -rs --verbose --pyargs gravityspy --cov gravityspy
  - python -m coverage run --append ${CONDA_PREFIX}/bin/wscan --help

after_success:
  - python -m pip install coveralls
  - coveralls

cache:
  pip: true

notifications:
  slack:
    secure: bpQXCgDGTkylXJ3Oe7bpIPnKu/F+nkdUx3Xo9ff41D7x479KId+FnTB4A72pQZB9fMPTJSRbAQOJ7xgRDy6/6vEIAtMElzhkbT1qQChNTQDm/N2GaOTmtiVPIfs/63YwgR3Mc+ek6dwPAiU8sY3hO6Zihn+rfAJH/DjrPDNnOZBQxjRfu/3ND8lwGpmbWvVRo9OnuToTNzZROqGDs4TdABn46jZkiqFu5dmV77dv4aLIbxBrK7GCBlWQnqamgidWuVc4qcS2McGHamvI6403KTStyPCTyngYCaxiH0EeVJlnwnX0Gb7h/6ekrgBpX4rovspHJY9ojTUzTgGWIcu6Ssy8qZWgVNLXZDzTJFfsnoAivU8LB3y/Lb7rdyHkemhKW6ibQ08sktM38NYdDoo7oaHrWg0H2Lgx7rPW/EKgSvEdgG85zFGpWnYy834iUnUx1ZDB73AMnijHNv7YDUrkq1D9Ddeyng3/FGkRIailoqsRPJvNtNkBp94KnBJRqqOnWf4WorXUn7fPMcgEKQj+wCRAy7gUcuSVY1BKoXmTQ60FUOJpoY+KPMMnU/EM2zZ29xkg2c+/3yPDpVX5ABcI/La0gDoArywAeWpS1c8Qq6pQr/8XW8vspCaCm8MuNjQLVB8yCr8D6dBWE/rf50fzzGZD1unOdNLF73uLR5BqQ2g=
